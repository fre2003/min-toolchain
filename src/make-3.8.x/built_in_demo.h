

//////////////////////////////////////////////////////////////////////////
static const char* builtin_demo =
"build-in featues in makefile:\n"
"Specify --use-accelerator-features or define enviroment variable MAKEFLAG_USE_BUILDIN_CMD\n"

"1) Built-in function.\n"
"\t$(rdfile <file>)                          : get file contents\n"
"\t$(rdfileln <file>,<max line>[,filter])    : get file contents with specify max. lines and filter condition\n"
"\t$(strupper <text>)                        : make the <text> upper case\n"
"\t$(strlower <text>)                        : make the <text> lower case\n"
"\t$(basedir <filepath>)                     : get the dir of full file path\n"
"\t$(rmdupword <text list>)                  : remove duplicated word\n"
"\t$(findstringwds <num>,<text>,<text list>) : find string and return specific <num> words\n"
"\t$(stripv <text>)                          : strip string if string is empty, return 0\n"
"\t$(stripvs <text>)                         : calculate crc16 for text\n"
"\t$(stripvl <text>)                         : calculate crc32 for text\n"
"\t$(fcrc <file>)                            : calculate crc32 for binary file.\n"
"\t$(local.datetime)                         : local data time\n"
"\n"

"2) Built-in command.\n"
"\tprint   <text>                            : display text\n"
"\techoerr <text>                            : display text and return error\n"
"\techo    <text> [>/>> <file>]              : display text\n"
"\techodt  [text]                            : display current date and time with optional text to show\n"
"\techodummy                                 : skip this command\n"
"\tfilewt  <file> <text>                     : write text to file\n"
"\tfileat  <file> <text>                     : append text to file\n"
"\tfilewtl <file> <text>                     : write seperate-space newline text to file\n"
"\tfileatl <file> <text>                     : append seperate-space newline text to file\n"
"\tfilecat <file1> <file2> .. <output file>  : append seperate-space newline text to file\n"
"\tcpyx [-s] [-q] <src files/folder> \n"
"\t     <dest files/folder> \n"
"\t     -e <exclude name> -e <exclude name> \n"
"\t     -x <exclude name with * or ?> \n"
"\tmdx <dir>                                 : create the direcotry, return error if fail\n"
"\trdx [-s] [-q] <dir>                       : delete the direcotry and subdir with -s, return error if fail\n"
"\tchdirx <dir>                              : change current directory.\n"
"\tchkempty <file>                           : if file is empty, return error.\n"
"\tfindx  <one file> [error text]            : find file or path, if the file don't exist, return error\n"
"\tfindxe <one file> [error text]            : find file or path, if the file or path exist, return error\n"
"\tbtfind <files>                            : find all specific files, if one file don't exist, return error.\n"
"\tdelx [-s] [-q] [-f] <files>               : remove all files with specific option, delx -q -f Z:/folder/1.bin delx -q -f Z:/folder/*.bin delx -q Z:/folder/*.bin\n"
"\tchkexe [-q] <program> [error text]        : check the program(.exe) file in PATH environment, if specify -q option don't display program path when find it.\n"
"\tcmdexec  <file/NUL> <command line>        : execute <command line> and output to <file>.\n"
"\tcmdexeca <file/NUL> <command line>        : execute <command line> and output to <file>(append mode).\n"
"\n"

"3) Built-in variable.\n"
"\tMAKEFLAG_USE_BUILDIN_CMD            : define this variable to enable accelerator feature.\n"
"\tMAKE_ENABLE_SHELL                   : define this variable to enalbe shell always.\n"
"\tMAKE_DISALBE_ALL_BUILTIN_CMD        : define this variable to disalbe all built-in command/rules.\n"
"\tSHELL                               : define this variable to specify the shell(the default shell is sh.exe).\n"
"\tMAKE_EXIT_CMD_LINE                  : define this variable to execute command-line while program exit.\n"
"\tMAKE_EXIT_CMD_LINE_DELETE_FILE      : define this variable to config file contain files which need to remove while program exit.\n"
"\n"

"4) Build-in compiler rules.\n"
".MAKE_IMPLICIT_CC_RULES        : specify increment compile rules\n"
".MAKE_IMPLICIT_FORCE_CC_RULES  : specify no-increment compile rules\n"
".MAKE_MODULE_LIST_TARGETS      : specify mutil-target rules\n"
".MAKE_FILE_LIST_MAKE_FEATURES  : specify mutil-file-target rules\n"
"see builtin_cc_rules_example.mk file for more.\n"
"\n"


"demo_cmZ: \n"
"\t@findx Z:/dir5/1.txt ***error: fail to find folder Z:/dir5/1.txt\n"
"\t@findxe Z:/dir/my_tmp_file.txt ***error: fail to find folder Z:/dir/my_tmp_file.txt\n"
"\t@delx -s -q Z:/dir3/*.bin\n"
"\t@cpyx -s -q Z:/demo Z:/demo2 -e readme.txt\n"
"\t@mdx Z:/dir3/dir4/dir6	\n"
"\t@echoerr stop this.\n"
"\t@rdx -s -q Z:/tools/demo\n"
"\t@rmfe Z:/dir3/1.bin ***error: fail to delete 1.bin, maybe this file is being used by another program.\n"
"\t@echodt\n"
"\n"

"export MAKEFLAG_USE_BUILDIN_CMD = YES\n"
"export MAKE_EXIT_CMD_LINE :=$(basedir $(SH_PATH))/exit.bat\n"
"export MAKE_EXIT_CMD_LINE_DELETE_FILE :=$(basedir $(SH_PATH))/delete_files.cfg\n"
"SHELL = mysh.exe\n"
"demo: \n"
"\t@echo crc32=$(fcrc Z:/1.bin)\n"
"\t@fileatl $(MAKE_EXIT_CMD_LINE_DELETE_FILE) $(basedir $(SH_PATH))/1/1.txt\n"
"\t@fileatl $(MAKE_EXIT_CMD_LINE_DELETE_FILE) $(basedir $(SH_PATH))/1/2.txt\n"
"\techoerr stop now\n"
"\n"

"FILE  := $(strip hellss )\n"
"DIRS  := Z:/bdir1 Z:/adir1/ Z:/dir1 hello hello Z:/dir3 Z:/cir3 Z:/cir4\n"
"MY_DIRS := $(rmdupword $(basedir Z:/bdirname/file1.c Z:/bdirname1/file1.c Z:/bdirname/file2.c Z:/bdirname2/file2.c) Z:/adirname Z:/adirname2)\n"
"MY_FILES := $(rmdupword Z:/bdirname/file2.c Z:/bdirname/file2.c Z:/adirname2/1.c)\n"
"\t@print -D __ID__=$(stripv $(subst 2.c,,$(findstringwds 2, 2.c, $(FILE_LIST))))\n"
"\t@print -D __ID__=$(stripvs 1.c)\n"
"\t@print -D __ID__=$(stripvl $(strip $(subst 2.c,,$(findstringwds 2, 2.c, $(STRING_LIST)))) 2.c)\n"
"\t@print -D __MOD_ID__=$(lastword $(rdfileln Z:/Project/1.c, 10, #define FILE_STRING))\n"
"MY_CFG_FILE := Z:/cfg.txt\n"
"DIRS := $(strupper $(sort $(DIRS)))\n"
"RD_FILE_CONTENTS := $(rdfile $(MY_CFG_FILE))\n"
"\n"
"demo100:\n"
"\t@print DIRS=$(DIRS)\n"
"\t@print MY_FILES=$(MY_FILES)\n"
"\t@print RD_FILE_CONTENTS=$(RD_FILE_CONTENTS)\n"
"\n"

"demo101:\n"
"\t@btfind $(DIRS)\n"
"\t@ls $(TEST_DIR) $(TEST_DIR) $(TEST_DIR) $(TEST_DIR)\n"
"\t@ls $(TEST_DIR) > $(TEST_DIR)1.txt\n"
"\n"

"STRING_LIST := 1.c 10.c   2.c  20.c   33.c  30.c "
"demo101:\n"
"\t@print $(strip $(subst 2.c,,$(findstringwds 2, 2.c, $(STRING_LIST))))\n"
"\n"

"demo102:\n"
"\t@filewtl Z:/append2file.log.txt 3456 c sdfasdf 567\n"
"\t@filewt Z:/add2file.log.txt 1ab c \"sdfasdf  \"asdfasdf 567\"\n"
"\t@fileat Z:/fileat.log.txt 1ab c \"sdfasdf  \"asdfasdf 567\"\n"
"\t@filewt Z:/append2file.log.txt 1ab c sdfasdf 567\n"
"\t@fileatl Z:/fileat.log.txt 3456 c sdfasdf 567\n"
"\t@fileatl Z:/fileat.log.txt 890 c hello \"last\"\n"
"\t@filecat Z:/file1.txt Z:/file2.txt Z:/fil1file2.txt \n"
"\t@cmdexeca Z:/1.tst.ls.txt  ls Z:/PerfLogs/System \n"
"\n"

"\n"
"cfg.txt:\n"
"##############\n"
"# config demo\n"
"##############\n"
"\n"
"CFG_1 := $(DIRS)\n"
"CFG_2 := $(MY_FILES)\n"
"\n"

"\n"
"MK_ERR_STR=***error: fail to find command!\n"
"\n"

"demo103:\n"
"\t$(MAKE) -f 2.mk ABCD_EFG=\"asldkfasjdkfasldkfajklfdjaslkfdj_0123456789\"\n"
"\t@mdx  Z:/dir3/asldkfasjdkfasldkf\n"
"\t@echoerr stop this.\n"
"\t@findx Z:/dir5/1.txt ***error: fail to find folder Z:/dir5/1.txt\n"
"\t@findx Z:/dir5 ***error: fail to find folder Z:/dir5\n"
"\t@delx -s -q Z:/dir3/*.bin\n" 
"\t@cpyx -q Z:/tools/binutils2/11.txt Z:/tools/binutils3/1.txt\n"
"\t@cpyx -q Z:/tools/binutils3/11.txt\n"
"\t@echoerr stop this.\n"
"\t@rmfe Z:/dir3/1.bin ***error: fail to delete 1.bin, maybe this file is being used by another program.\n"
"\t@rdx -s -q Z:/tools/dir\n"
"\t@cpyx -s -q Z:/tools/dir1 Z:/tools/dir2 -e readme.txt\n"
"\t@echoerr this is error output, stop here.\n"
"\t@ls Z:/mydir\n"
"\t@mdx Z:/dir3/dir4/dir6\n"
"\n"

"demo104:_MAKIE_FILES_LIST_TARGET\n"
"_PATH_FILE_LIST_CONFIG :=$(wildcard $(TEST_PATH)/*.bin)\n"
"#_PATH_FILE_LIST_CONFIG :=10 20 30\n"
".MAKE_FILE_LIST_MAKE_FEATURES\n"
"\t@echo $(subst _FN_,,$@)\n"
"\t@echo $(basename $(subst _FN_,,$@))\n"
"\t@echo $(notdir $(subst _FN_,,$@))\n"
"\t@echo $(subst .bin,,$(subst tst_,,$(notdir $(subst _FN_,,$@))))\n"
"\t@echo -\n"
"xmake -f 100.mk demo104  --use-accelerator-features\n"
"\n"

"MAKE_MULTI_TARGETS = do_subdir\n"
"MAKE_MODULE_LIST   = dir0/dir1 dir1/dir2 \n"
"demo105: $(MAKE_MULTI_TARGETS)\n"
".MAKE_MODULE_LIST_TARGETS\n"
"\t@echodt $@\n"
"\t@echo $(notdir $@)\n"
"\n"
"xmake -f 100.mk demo105  --use-accelerator-features\n"
"\n"

;

